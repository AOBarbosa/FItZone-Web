import './globals.css'

import type { Metadata } from 'next'
import localFont from 'next/font/local'

import SideBar from '@/components/sidebar'
import { ThemeProvider } from '@/components/theme-provider'
import { Toaster } from '@/components/ui/toaster'

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
})
const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
})

export const metadata: Metadata = {
  title: 'Fit Zone',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="pt-BR">
      <body
        className={`${geistSans.variable} ${geistMono.variable} scroll-smooth antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <SideBar>{children}</SideBar>
          <Toaster />
        </ThemeProvider>
      </body>
    </html>
  )
}

// // Componente marcado com "use client"
// function ClientComponent({ children }: { children: React.ReactNode }) {
//   'use client'

//   const [isLoginPage, setIsLoginPage] = useState(false)

//   useEffect(() => {
//     if (typeof window !== 'undefined') {
//       setIsLoginPage(window.location.href.includes('login'))
//     }
//   }, [])

//   return (
//     <>
//       {isLoginPage ? (
//         <>{children}</>
//       ) : (
//         <>
//           <SidebarProvider>
//             <AppSidebar />
//             <SidebarInset>
//               <header className="flex h-16 shrink-0 items-center gap-2 transition-[width,height] ease-linear group-has-[[data-collapsible=icon]]/sidebar-wrapper:h-12">
//                 <div className="flex items-center gap-2 px-4">
//                   <SidebarTrigger className="-ml-1" />
//                   <Separator orientation="vertical" className="mr-2 h-4" />
//                   <Breadcrumb>
//                     <BreadcrumbList>
//                       <BreadcrumbItem className="hidden md:block">
//                         <BreadcrumbLink href="#">Dashboard</BreadcrumbLink>
//                       </BreadcrumbItem>
//                       <BreadcrumbSeparator className="hidden md:block" />
//                       <BreadcrumbItem>
//                         <BreadcrumbPage>Geral</BreadcrumbPage>
//                       </BreadcrumbItem>
//                     </BreadcrumbList>
//                   </Breadcrumb>
//                 </div>
//               </header>
//               {children}
//             </SidebarInset>
//           </SidebarProvider>
//         </>
//       )}
//     </>
//   )
// }
