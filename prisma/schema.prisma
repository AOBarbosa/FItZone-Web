// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Models
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  role          String          @default("INSTRUCTOR") // Simulando enum com String
  accounts      Account[]
  sessions      Session[]
  Authenticator Authenticator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}

model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

model Student {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  cpf       String
  birthdate String   @default("1990-01-01")
  active    String   @default("ACTIVE")
  feeStatus String   @default("SUCCESS") // Simulando enum com String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Instructor {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  cpf       String?
  birthdate String   @default("1990-01-01")
  role      String   @default("INSTRUCTOR") // Simulando enum com String
  active    String   @default("ACTIVE")
  cref      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
